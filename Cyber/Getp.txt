Given the updated screenshot which shows the API response, you can modify the script to specifically extract the "Content" value, which contains the password. Here's how you can adjust the Python code to do that:

import configparser
import requests

# Initialize the configparser
config = configparser.ConfigParser()
config.read('config.ini')

# Extract API and SSL configuration from the INI file
api_url = config['api']['url']
api_params = {
    'AppID': config['api']['AppID'],
    'Safe': config['api']['Safe'],
    'UserName': config['api']['UserName'],
    'Address': config['api']['Address']
}

cert_path = config['ssl']['cert']
key_path = config['ssl']['key']
ca_cert_path = config['ssl']['cacert']

try:
    # Make the HTTPS request using the parameters from the config file
    response = requests.get(
        api_url,
        params=api_params,
        cert=(cert_path, key_path),  # Tuple of (cert, key)
        verify=ca_cert_path  # CA certificate for SSL verification
    )

    # Check if the request was successful
    if response.status_code == 200:
        print("Request successful")
        print("Response:", response.text)  # Print the whole response for debugging
        
        # Extract the "Content" which contains the password
        response_data = response.json()
        password_content = response_data['Content']  # This is where the password is contained
        print("Extracted Password Content:", password_content)  # Debugging print for the password content

        return password_content  # Return only the password content

except Exception as e:
    print("Failed to make a request:", str(e))

Explanation:

The script retrieves the full JSON response and then extracts the "Content" key where the password is stored.

It prints the full response for debugging purposes and separately prints the password content. This should match your requirements of debugging and handling sensitive information effectively.


Make sure to adjust the exception handling to fit your specific needs or to address any possible errors in response handling.


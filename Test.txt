test the file contents 

To list all indices in Elasticsearch sorted in descending order based on their creation date, you can use the Elasticsearch **Cat API** (`_cat/indices`) combined with sorting capabilities in a shell script. The **Cat API** provides a way to retrieve metadata about the indices, including their creation dates.

### Shell Script: `list_indices_sorted.sh`

Here is the shell script to list indices sorted by their creation date in descending order:

```bash
#!/bin/bash

# Replace these with your actual credentials
USERNAME="your_username"
PASSWORD="your_password"

# Replace with your Elasticsearch host
ES_HOST="https://your_elasticsearch_host:9200"

# Use the Cat API to get the list of all indices with their creation dates
curl -s -u "$USERNAME:$PASSWORD" \
  --header "Content-Type: application/json" \
  --location --request GET "$ES_HOST/_cat/indices?h=index,creation.date.string&s=creation.date:desc" | awk '{print $1, $2}' 
```

### Explanation:

1. **`_cat/indices` Endpoint:**
   - This is an Elasticsearch Cat API endpoint that returns information about all indices, including their creation dates.
   - The **`?h=index,creation.date.string`** parameter specifies that we want to retrieve the index names and their creation dates.
   - The **`&s=creation.date:desc`** parameter sorts the indices by their creation date in descending order.

2. **`curl` Command:**
   - **`-s`**: Runs `curl` in silent mode to suppress progress information and only show the output.
   - **`-u`**: Supplies the username and password for authentication.

3. **`awk` Command:**
   - Used to format the output to display only the index name and its creation date.

### Instructions to Run the Script:

1. **Replace** `your_username`, `your_password`, and `your_elasticsearch_host` with your actual Elasticsearch credentials and host.
2. **Save** the script to a file, e.g., `list_indices_sorted.sh`.
3. **Make the script executable** by running:

   ```bash
   chmod +x list_indices_sorted.sh
   ```

4. **Run** the script:

   ```bash
   ./list_indices_sorted.sh
   ```

### Expected Output:

The output will list all the indices sorted by their creation date in descending order, displaying the index name and its creation date:

```plaintext
index_name_3 2023-09-01T15:30:00Z
index_name_2 202


‐---------

To list all indices in Elasticsearch sorted in descending order based on their creation date, you can use the Elasticsearch **Cat API** (`_cat/indices`) combined with sorting capabilities in a shell script. The **Cat API** provides a way to retrieve metadata about the indices, including their creation dates.

### Shell Script: `list_indices_sorted.sh`

Here is the shell script to list indices sorted by their creation date in descending order:

```bash
#!/bin/bash

# Replace these with your actual credentials
USERNAME="your_username"
PASSWORD="your_password"

# Replace with your Elasticsearch host
ES_HOST="https://your_elasticsearch_host:9200"

# Use the Cat API to get the list of all indices with their creation dates
curl -s -u "$USERNAME:$PASSWORD" \
  --header "Content-Type: application/json" \
  --location --request GET "$ES_HOST/_cat/indices?h=index,creation.date.string&s=creation.date:desc" | awk '{print $1, $2}' 
```

### Explanation:

1. **`_cat/indices` Endpoint:**
   - This is an Elasticsearch Cat API endpoint that returns information about all indices, including their creation dates.
   - The **`?h=index,creation.date.string`** parameter specifies that we want to retrieve the index names and their creation dates.
   - The **`&s=creation.date:desc`** parameter sorts the indices by their creation date in descending order.

2. **`curl` Command:**
   - **`-s`**: Runs `curl` in silent mode to suppress progress information and only show the output.
   - **`-u`**: Supplies the username and password for authentication.

3. **`awk` Command:**
   - Used to format the output to display only the index name and its creation date.

### Instructions to Run the Script:

1. **Replace** `your_username`, `your_password`, and `your_elasticsearch_host` with your actual Elasticsearch credentials and host.
2. **Save** the script to a file, e.g., `list_indices_sorted.sh`.
3. **Make the script executable** by running:

   ```bash
   chmod +x list_indices_sorted.sh
   ```

4. **Run** the script:

   ```bash
   ./list_indices_sorted.sh
   ```

--------

#!/bin/bash

# Replace these with your actual credentials
USERNAME="your_username"
PASSWORD="your_password"

# Replace with your Elasticsearch host
ES_HOST="https://your_elasticsearch_host:9200"

# Use the Cat API to get the list of all indices with their creation dates and total size
curl -s -u "$USERNAME:$PASSWORD" \
  --header "Content-Type: application/json" \
  --location --request GET "$ES_HOST/_cat/indices?h=index,creation.date.string,store.size&s=creation.date:desc" | awk '{printf "%-40s %-30s %-10s\n", $1, $2, $3}'

### Expected Output:

The output will list all the indices sorted by their creation date in descending order, displaying the index name and its creation date:

```plaintext
index_name_3 2023-09-01T15:30:00Z
index_name_2 202

‐------------'
If the Finder window always appears behind the Terminal when you run the shell script, you can use the `osascript` command with AppleScript to bring the Finder to the front explicitly. This script will force the Finder to become the active application, bringing the **Documents** folder to the foreground.

### **Step 1: Create or Edit the Shell Script**
1. Open the **Terminal** application.
2. Create a new shell script or edit an existing one:
   ```bash
   nano open_documents.sh
   ```

3. Add the following content to the script:

   ```bash
   #!/bin/bash
   # Shell script to open the Documents folder and bring Finder to the foreground

   # Open the Documents folder using Finder
   open ~/Documents

   # Use AppleScript to activate Finder and bring it to the front
   osascript -e 'tell application "Finder" to activate'
   ```

4. Save the file:
   - Press `Ctrl + O` to save.
   - Press `Enter` to confirm the file name.
   - Press `Ctrl + X` to exit the editor.

### **Step 2: Make the Script Executable**
1. Run the following command to make your script executable:
   ```bash
   chmod +x open_documents.sh
   ```

### **Step 3: Run the Script**
1. Run the script by typing:
   ```bash
   ./open_documents.sh
   ```

### **Explanation:**
- The `open ~/Documents` command opens the **Documents** folder in Finder.
- The `osascript` command runs a small AppleScript snippet that tells the Finder to **activate**, which brings it to the front of all open windows.

### **Result:**
This approach will ensure that the **Finder** window displaying the **Documents** folder comes to the foreground, above the Terminal window.





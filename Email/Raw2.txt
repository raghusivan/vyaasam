 The error suggests that the SMTP server does not have permission to send emails from the from_address in config.ini, possibly due to mismatched sender addresses in the headers and envelope sender. To ensure the server recognizes and permits the email, let's take the following steps:

1. Ensure that the envelope sender (the one used in sendmail) and the From header within the email are identical and strictly use from_address from config.ini.


2. Avoid modifying any other headers in the .eml file but replace only the From field if necessary.



Hereâ€™s the modified code:

import os
import smtplib
import logging
from configparser import ConfigParser
from datetime import datetime
import pytz

# Configure logging
class SydneyTimeFormatter(logging.Formatter):
    def formatTime(self, record, datefmt=None):
        utc_dt = datetime.utcfromtimestamp(record.created)
        sydney_dt = utc_dt.replace(tzinfo=pytz.utc).astimezone(pytz.timezone('Australia/Sydney'))
        return sydney_dt.strftime('%Y-%m-%d %H:%M:%S')

logging.basicConfig(
    filename='email_sender.log',
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger()
for handler in logger.handlers:
    handler.setFormatter(SydneyTimeFormatter('%(asctime)s - %(levelname)s - %(message)s'))

# Read configuration from config.ini
config = ConfigParser()
config.read('config.ini')

# SMTP Configuration
smtp_server = config.get('SMTP', 'smtp_server')
smtp_port = config.getint('SMTP', 'smtp_port')
smtp_user = config.get('SMTP', 'smtp_user')
smtp_password = config.get('SMTP', 'smtp_password')

# Email Configuration
from_address = config.get('Email', 'from_address')  # Use this as the "From" address
to_address = config.get('Email', 'to_address')
extensions = [ext.strip() for ext in config.get('Email', 'extensions').split(',')]

# Function to send raw content of .eml files
def send_raw_eml_files():
    try:
        # Establish SMTP connection
        server = smtplib.SMTP(smtp_server, smtp_port)
        server.ehlo()
        server.starttls()
        server.ehlo()
        server.login(smtp_user, smtp_password)
        
        # Process each .eml file
        for filename in os.listdir('.'):
            if os.path.isfile(filename) and any(filename.endswith(ext) for ext in extensions):
                logging.info(f"Processing file: {filename}")
                
                # Read the entire .eml file as raw content
                with open(filename, 'r') as eml_file:
                    raw_content = eml_file.read()

                # Replace the "From" header in raw content with config from_address if necessary
                raw_content = raw_content.replace("From: ", f"From: {from_address}\n", 1)
                
                # Log the details for verification
                logging.info(f"Using Config 'From' Address: {from_address}")
                logging.info(f"To Address (X-RCPT-TO): {to_address}")

                # Send the email with raw content, using `from_address` as the envelope sender
                server.sendmail(from_address, to_address, raw_content)
                logging.info(f"Email sent successfully from: {from_address} using file: {filename}")
        
        # Close the SMTP connection
        server.quit()
        
    except Exception as e:
        logging.error(f"Failed to send email: {e}")

# Execute the function
send_raw_eml_files()

Key Changes

1. Ensure Consistent From Address: Replaced the From header in the raw email content with the from_address from config.ini if necessary. This replacement is applied only to the first occurrence of "From: " to avoid modifying unintended parts of the content.


2. Sendmail Usage: The from_address from config.ini is used as the envelope sender.



Notes:

This approach ensures that the SMTP server sees the from_address consistently as both the envelope sender and From header in the email.

If the SMTP server still rejects this, the server may enforce stricter controls, and you might need to verify with the server administrator that the from_address is whitelisted for sending.


Let me know if this resolves the issue.


 To address the permission issue while retaining the raw content format, you can modify the script to always use the from_address from config.ini instead of using the From header in the .eml file. This way, the SMTP server will recognize the sender as an authorized user.

Hereâ€™s how to adjust your script:

1. Use the from_address specified in config.ini.


2. Send the raw .eml content without altering it.



import os
import smtplib
import logging
from email import message_from_file
from configparser import ConfigParser
from datetime import datetime
import pytz

# Configure logging
class SydneyTimeFormatter(logging.Formatter):
    def formatTime(self, record, datefmt=None):
        utc_dt = datetime.utcfromtimestamp(record.created)
        sydney_dt = utc_dt.replace(tzinfo=pytz.UTC).astimezone(pytz.timezone('Australia/Sydney'))
        return sydney_dt.strftime('%Y-%m-%d %H:%M:%S')

logging.basicConfig(
    filename='email_sender.log',
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger()
for handler in logger.handlers:
    handler.setFormatter(SydneyTimeFormatter('%(asctime)s - %(levelname)s - %(message)s'))

# Read configuration from config.ini
config = ConfigParser()
config.read('config.ini')

# SMTP Configuration
smtp_server = config.get('SMTP', 'smtp_server')
smtp_port = config.getint('SMTP', 'smtp_port')
smtp_user = config.get('SMTP', 'smtp_user')
smtp_password = config.get('SMTP', 'smtp_password')

# Email Configuration
from_address = config.get('Email', 'from_address')  # Set "From" address from config
to_address = config.get('Email', 'to_address')
extensions = [ext.strip() for ext in config.get('Email', 'extensions').split(',')]

# Function to send raw content of .eml files
def send_raw_eml_files():
    try:
        # Establish SMTP connection
        server = smtplib.SMTP(smtp_server, smtp_port)
        server.ehlo()
        server.starttls()
        server.ehlo()
        server.login(smtp_user, smtp_password)
        
        # Process each .eml file
        for filename in os.listdir('.'):
            if os.path.isfile(filename) and any(filename.endswith(ext) for ext in extensions):
                logging.info(f"Processing file: {filename}")
                
                # Open and read the .eml file
                with open(filename, 'r') as eml_file:
                    msg = message_from_file(eml_file)
                
                # Extract 'Subject' from the .eml file
                subject = msg['Subject']
                
                # Re-read the .eml file line by line to retain exact formatting
                with open(filename, 'r') as eml_file:
                    raw_content = eml_file.read()
                
                # Log the details
                logging.info(f"Using Config 'From' Address: {from_address}")
                logging.info(f"To Address: {to_address}")
                logging.info(f"Subject: {subject}")

                # Send the raw email content using config `from_address`
                server.sendmail(from_address, to_address, raw_content)
                logging.info(f"Email sent successfully from: {from_address} using file: {filename}")
        
        # Close the SMTP connection
        server.quit()
        
    except Exception as e:
        logging.error(f"Failed to send email: {e}")

# Execute the function
send_raw_eml_files()

Explanation:

1. Config-based "From" Address: The from_address is taken from the config.ini file and used as the sender for all emails.


2. Log Entries: Logs provide details about the from_address from the config, the to_address, and the subject from each .eml file.


3. Raw Content: The .eml file is read as raw content, ensuring the email's formatting and headers remain unchanged.



This setup should avoid the SMTP permissions error by using the authorized from_address from config.ini.


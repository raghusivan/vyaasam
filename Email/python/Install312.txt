{
  "ec2": {
    "type": "auto-scale",
    "enabled": true,
    "stage": "10default",
    "descriptor": {
      "Resources": {
        "Certificate": {
          "Type": "Pipeline::SSLCertificate",
          "Properties": {
            "SigningCertificate": {
              "service": "core",
              "application": "signingcertificate",
              "component": "macquariesha2",
              "branch": "prod"
            }
          }
        },
        "SecurityGroup": {
          "Properties": {
            "EgressRules": [
              {
                "targets": ["smtp"],
                "ports": ["TCP:{{smtp.port}}"]
              },
              {
                "targets": ["smtp-auth"],
                "ports": ["TCP:{{smtp.auth_port}}"]
              },
              {
                "targets": ["{{cyberark.prn}}"],
                "ports": ["TCP:{{cyberark.port}}"]
              }
            ],
            "IngressRules": []
          }
        },
        "WaitCondition": {
          "Type": "AWS::CloudFormation::WaitCondition",
          "Properties": {
            "Timeout": 7200
          }
        },
        "LaunchConfiguration": {
          "Type": "AWS::AutoScaling::LaunchTemplate",
          "Properties": {
            "InstanceType": "{{component.ec2.instance.type}}",
            "UserData": {
              "Fn::Base64": {
                "Fn::Join": [
                  "",
                  [
                    "#!/bin/bash\n",
                    "exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1\n",
                    "echo 'Starting Python 3.12 installation...'\n",
                    "yum update -y\n",
                    "yum groupinstall 'Development Tools' -y\n",
                    "yum install openssl-devel bzip2-devel libffi-devel sqlite-devel -y\n",
                    "cd /opt\n",
                    "wget https://www.python.org/ftp/python/3.12.0/Python-3.12.0.tgz\n",
                    "tar xzf Python-3.12.0.tgz\n",
                    "cd Python-3.12.0\n",
                    "./configure --enable-optimizations\n",
                    "make altinstall\n",
                    "ln -sf /usr/local/bin/python3.12 /usr/bin/python3\n",
                    "ln -sf /usr/local/bin/pip3.12 /usr/bin/pip3\n",
                    "python3 --version > /var/log/python-version.log\n",
                    "echo 'Python installation completed'\n",
                    "pip3 install --upgrade pip\n",
                    "# Verify installation\n",
                    "if command -v python3.12 > /dev/null; then\n",
                    "    echo 'Python 3.12 installed successfully' >> /var/log/python-install-success.log\n",
                    "else\n",
                    "    echo 'Python 3.12 installation failed' >> /var/log/python-install-error.log\n",
                    "    /opt/aws/bin/cfn-signal -e 1 --stack ${AWS::StackName} --resource WaitCondition\n",
                    "    exit 1\n",
                    "fi\n",
                    "/opt/aws/bin/cfn-signal -e 0 --stack ${AWS::StackName} --resource WaitCondition\n"
                  ]
                ]
              }
            }
          }
        },
        "Instance": {
          "Properties": {
            "InstanceType": "{{component.ec2.instance.operation.system}}"
          }
        },
        "Metadata": {
          "Pipeline::Dataset": [
            "{{global.dataset}}",
            "{{dataset_name}}",
            "{{last_dataset}}",
            "{{/global.dataset}}"
          ],
          "Pipeline::Agents": {
            "splunk": {
              "enabled": true
            }
          }
        },
        "AutoScalingGroup": {
          "Type": "AWS::AutoScaling::AutoScalingGroup",
          "Properties": {
            "MinSize": "1",
            "MaxSize": "2",
            "DesiredCapacity": "1"
          }
        },
        "IAMRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "ec2.amazonaws.com"
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": "InvokeFunctionPolicy",
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": "lambda:InvokeFunction",
                      "Resource": "arn:aws:lambda:ap-southeast-2:828604310598:function:commsurvey_avatar_dev_avatar"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  }
}

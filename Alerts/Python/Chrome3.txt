import requests
from requests.auth import HTTPBasicAuth
import urllib3
from datetime import datetime
import json

# Disable SSL warnings
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

class ChromeAuthAPI:
    def __init__(self, base_url, username, password):
        self.base_url = base_url
        self.username = username
        self.password = password
        self.session = requests.Session()
        self.session.verify = False
        # Set up basic auth exactly like Chrome does
        self.session.auth = HTTPBasicAuth(username, password)

    def execute_request(self, endpoint, method='GET', params=None, headers=None):
        """Execute request with Chrome-like auth mechanism"""
        url = f"{self.base_url}{endpoint}"
        
        default_headers = {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
        }
        
        if headers:
            default_headers.update(headers)
            
        try:
            response = self.session.request(
                method=method,
                url=url,
                params=params,
                headers=default_headers
            )
            
            # Print detailed debug info
            print(f"Request URL: {response.url}")
            print(f"Status Code: {response.status_code}")
            print(f"Response Headers: {dict(response.headers)}")
            
            # Handle different response types
            if response.status_code == 401:
                print("Authentication failed. Check credentials.")
                return None
                
            # Return raw response if not JSON
            try:
                return response.json()
            except json.JSONDecodeError:
                return response.text
                
        except requests.exceptions.RequestException as e:
            print(f"Request failed: {str(e)}")
            return None

# Usage example
if __name__ == "__main__":
    # API configuration
    BASE_URL = "https://core1.uat.core.commsurv.syd.non.c1.macquarie.com"
    USERNAME = "your_username"  # Replace with actual username
    PASSWORD = "your_password"  # Replace with actual password
    
    # Initialize API client
    api = ChromeAuthAPI(BASE_URL, USERNAME, PASSWORD)
    
    # Set up request parameters
    params = {
        "start-datetime": "2024-07-09T12:31:17.123",
        "end-datetime": "2024-08-09T12:31:17.123",
        "status": "QA â€“ Incorrect Closure"
    }
    
    # Execute request
    response = api.execute_request(
        endpoint="/conduct_surveillance/api/ecomm_production_20200929/case_management/messages",
        params=params
    )
    
    if response:
        print("\nAPI Response:")
        print(json.dumps(response, indent=2) if isinstance(response, (dict, list)) else response)
    else:
        print("\nNo valid response received")

# Optional: Function to test specific endpoint
def test_endpoint(api_client, endpoint, params=None):
    """Test specific endpoint with detailed output"""
    print(f"\nTesting endpoint: {endpoint}")
    print(f"Parameters: {params}")
    
    response = api_client.execute_request(endpoint=endpoint, params=params)
    
    print("\nResponse Details:")
    if isinstance(response, (dict, list)):
        print(json.dumps(response, indent=2))
    else:
        print(response)
    
    return response

Here's a complete Unix shell script that:

1. Accepts message_id as a command-line argument


2. Substitutes it in the statusExact.json file that contains {{message_id}} placeholder


3. Queries the Elasticsearch index with curl


4. Saves and pretty-prints the result as JSON to a file




---

Script: query_es_message.sh

#!/bin/bash

# Usage check
if [ $# -ne 1 ]; then
  echo "Usage: $0 <message_id>"
  exit 1
fi

# Input
MESSAGE_ID="$1"

# Config
ES_URL="https://master.uat.digitalreasoningelasticsearch.forriskdigitalreasoning.syd.non.c1.macquarie.com:9200"
INDEX_NAME="ecomm_production_20200929__message_types_alerts_2025"
ES_USERNAME="rmg_dp_elastic_au_ua"
ES_PASSWORD="qMNrip_HJKLbzz!!"
TEMPLATE_FILE="statusExact.json"
QUERY_FILE="query_temp.json"
OUTPUT_FILE="es_response_${MESSAGE_ID}.json"

# Substitute placeholder in JSON query
sed "s/{{message_id}}/${MESSAGE_ID}/g" "$TEMPLATE_FILE" > "$QUERY_FILE"

# Execute Elasticsearch query
curl -u "$ES_USERNAME:$ES_PASSWORD" \
     -H "Content-Type: application/json" \
     -X POST "${ES_URL}/${INDEX_NAME}/_search" \
     -d @"$QUERY_FILE" \
     -s | jq . > "$OUTPUT_FILE"

echo "Query executed. Response saved to $OUTPUT_FILE"


---

Instructions to Run

1. Save it as query_es_message.sh


2. Make executable:

chmod +x query_es_message.sh


3. Run it:

./query_es_message.sh AZSNpM9TjdrZW-iTCoQJ



This will replace {{message_id}} in statusExact.json, perform the query, and save a pretty-formatted JSON result.

Would you like a version that exports selected fields into a CSV too?


Fixes Applied to Your JSON

I've reviewed your JSON and applied necessary fixes based on best practices and the previous discussion regarding IAM authentication with Vault.

Key Fixes

1. Fixed ARN Formatting Issues

Updated "prn:aws::" to "arn:aws::" where necessary.

Ensured the IAM role format matches arn:aws:iam::<account_id>:role/<role_name>.



2. Fixed IAM Trust Policy

Added sts:AssumeRoleWithWebIdentity to support IAM authentication if needed.



3. Updated Lambda IAM Role for Vault

Added a wildcard assumption role to support assumed roles when interacting with Vault.





---

Fixed JSON

{
  "Resources": {
    "Lambda": {
      "Properties": {
        "Timeout": "{{lambda.timeout}}",
        "Environment": {
          "Variables": {
            "environment": "{{app.environment}}",
            "BUCKET_NAME": "{{tsBucket.name}}",
            "S3-PROXY": "{{httpsProxy}}"
          }
        }
      },
      "Metadata": {
        "Pipeline::DatasetInMemory": "CSS Alerts",
        "Pipeline::Dataset": "CSS Alerts",
        "Pipeline::Agents": {
          "arn:aws::secretsmgt:vaultagent:prd:vcpiamrolecfg": {
            "enabled": true
          }
        }
      }
    },
    "LambdaRole": {
      "Properties": {
        "Policies": [
          "{{tsBucket.prn}}",
          "arn:aws:iam::977099029374:role/prod/roles/service/secretsmgt/VaultAuthRole"
        ],
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/ReadOnlyAccess"
        ],
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": [
                "sts:AssumeRole",
                "sts:AssumeRoleWithWebIdentity"
              ]
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::977099029374:role/prod/roles/service/secretsmgt/VaultAuthRole"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      }
    },
    "LambdaPolicy": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": ["lambda:InvokeFunction"],
              "Resource": "*"
            }
          ]
        }
      }
    }
  }
}


---

Summary of Fixes

âœ” Ensured correct ARN format (arn:aws:iam:: instead of prn:aws::)
âœ” Updated IAM role trust policy to allow Lambda role assumption properly
âœ” Allowed Vault authentication using both IAM and STS assumed roles
âœ” Ensured LambdaPolicy has proper permissions for function invocation


---

Next Steps

1. Deploy this updated JSON in your pipeline.


2. Monitor logs to check if authentication works correctly.


3. Check AWS STS calls using:

aws sts get-caller-identity

This verifies what role the Lambda function is assuming.


4. Verify Vault logs to confirm successful authentication.



Let me know if you need further refinements! ðŸš€

